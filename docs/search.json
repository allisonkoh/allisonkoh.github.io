[
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "The collections of links below include references I frequently consult in my professional workflow and resources that I am often asked to recommend. Regard it as a handpicked selection of things that I have found to be super helpful. Maybe they‚Äôll help you too. üòä\nI regularly update these collections every time I learn something new, find myself visiting the same how-to guide at least twice, and receive requests for advice on a specific aspect of coding. Some links/resources/advice may be out of date.\n\nPython\nQuarto\nR\nOther\n\n\n\n\n Back to top"
  },
  {
    "objectID": "resources_quarto.html",
    "href": "resources_quarto.html",
    "title": "Quarto",
    "section": "",
    "text": "Docs/first stop for getting started: https://quarto.org/\n\nExtensions: https://quarto.org/docs/extensions/listing-revealjs.html\nPresentations (in revealjs): https://quarto.org/docs/presentations/revealjs/\n\n\nGetting started\n\nGetting Started with Quarto by Tom Mock (presented at rstudio conf 2022; works as of June 2023) here. Source code here.\n\nMisc\n\nA Quarto tip a day by Mine Cetinkaya-Rundel: https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/"
  },
  {
    "objectID": "resources_quarto.html#general",
    "href": "resources_quarto.html#general",
    "title": "Quarto",
    "section": "",
    "text": "Docs/first stop for getting started: https://quarto.org/\n\nExtensions: https://quarto.org/docs/extensions/listing-revealjs.html\nPresentations (in revealjs): https://quarto.org/docs/presentations/revealjs/\n\n\nGetting started\n\nGetting Started with Quarto by Tom Mock (presented at rstudio conf 2022; works as of June 2023) here. Source code here.\n\nMisc\n\nA Quarto tip a day by Mine Cetinkaya-Rundel: https://mine-cetinkaya-rundel.github.io/quarto-tip-a-day/"
  },
  {
    "objectID": "resources_quarto.html#cross-referencing",
    "href": "resources_quarto.html#cross-referencing",
    "title": "Quarto",
    "section": "Cross-referencing",
    "text": "Cross-referencing\nSections https://quarto.org/docs/authoring/cross-references.html#sections\nTo reference a section, add a #sec- identifier to any heading. For example:\n## Introduction {#sec-introduction}\n\nSee @sec-introduction for additional context.\nNote that when using section cross-references, you will also need to enable the number-sections option (so that section numbering is visible to readers). For example:\n---\ntitle: \"My Document\"\nnumber-sections: true\n---"
  },
  {
    "objectID": "resources_quarto.html#installing-extensions",
    "href": "resources_quarto.html#installing-extensions",
    "title": "Quarto",
    "section": "Installing extensions",
    "text": "Installing extensions\nExtensions (e.g.¬†quarto-ext/fontawesome for icons) have to be installed with every new project (as far as I know). Quick tutorial for this: https://www.youtube.com/watch?v=u8EOVOjX13Y"
  },
  {
    "objectID": "resources_quarto.html#web",
    "href": "resources_quarto.html#web",
    "title": "Quarto",
    "section": "Web",
    "text": "Web\nI found the following to be helpful in migrating my personal website from distill to Quarto:\n\nCode and content for andrewheiss.com\nPorting a distill blog to quarto by Danielle Navarro\nCustomizing Your Quarto Website by Patrick Mobley\n\nPatrick also provides a good list of examples/inspo.\n\nCustomizing Quarto Websites by Sam Csik"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\nAllison Koh | Computational Political Scientist\n",
    "section": "",
    "text": "Allison Koh | Computational Political Scientist\n\nHi! I am a Research Fellow in Natural Language Processing at the University of Birmingham‚Äôs Centre for Artificial Intelligence in Government. I recently earned my PhD at the Hertie School‚Äôs Centre for International Security in Berlin.\nMy research interests lie at the intersection of international relations, political communication, and computational social science, with a focus on the geopolitics of information disorder and the role of quasi-state actors in digital repression. My dissertation project investigated how authoritarian governments use social media to exert influence over information ecosystems that extend beyond their borders, which has important implications for transnational repression and platform governance.\n\n\n\n\n\n\nI am currently based in London. Feel free to reach out to discuss potential opportunities, areas of mutual interest, or to grab a üçµ or üç∫ around London or Birmingham.\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "Slides",
    "section": "",
    "text": "PhD Defense\nISA 2025\n\n\n\n\n Back to top"
  },
  {
    "objectID": "resources_other.html",
    "href": "resources_other.html",
    "title": "Other",
    "section": "",
    "text": "Use !important; in CSS style files to override any other style rules applied to an element. It‚Äôs not necessarily ‚Äúbest practices‚Äù to do so, but easy to implement in a pinch when you can‚Äôt be bothered to make sure specific selectors are applied correctly‚Ä¶\ne.g.:\npre {\n  background-color: #f0f0f0 !important; \n}"
  },
  {
    "objectID": "resources_other.html#html5css",
    "href": "resources_other.html#html5css",
    "title": "Other",
    "section": "",
    "text": "Use !important; in CSS style files to override any other style rules applied to an element. It‚Äôs not necessarily ‚Äúbest practices‚Äù to do so, but easy to implement in a pinch when you can‚Äôt be bothered to make sure specific selectors are applied correctly‚Ä¶\ne.g.:\npre {\n  background-color: #f0f0f0 !important; \n}"
  },
  {
    "objectID": "resources_other.html#markdown",
    "href": "resources_other.html#markdown",
    "title": "Other",
    "section": "Markdown",
    "text": "Markdown\n\nEmojis"
  },
  {
    "objectID": "resources_other.html#miscellaneous",
    "href": "resources_other.html#miscellaneous",
    "title": "Other",
    "section": "Miscellaneous",
    "text": "Miscellaneous\n\nSource Code Images\nCreate pretty images of source code here: https://carbon.now.sh/\n\n\nPalette Sites\n\nhttps://coolors.co/\nhttps://pokepalettes.com/\nhttps://colorbrewer2.org/"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Email: a.w.koh@bham.ac.uk\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "Platformed Power Plays: Authoritarian Adaptations in Foreign Social Media Spaces"
  },
  {
    "objectID": "research.html#dissertation",
    "href": "research.html#dissertation",
    "title": "Research",
    "section": "",
    "text": "Platformed Power Plays: Authoritarian Adaptations in Foreign Social Media Spaces"
  },
  {
    "objectID": "research.html#publications",
    "href": "research.html#publications",
    "title": "Research",
    "section": "Publications",
    "text": "Publications\n\nConfererence Proceedings\nKoh, Allison, Daniel Boey, and Hannah B√©chara. 2021. ‚ÄúPredicting Policy Domains from Party Manifestos with BERT and Convolutional Neural Networks‚Äù. In Proceedings of the 1st Workshop on Computational Linguistics for Political Text Analysis, D√ºsseldorf, Germany.\n\n\nResearch in Progress\nKoh, Allison and Joshua A. Tucker. Nationalist Shields in Transnational Domains: PRC Supporters‚Äô Responses to Uyghur Activists-in-Exile on Twitter.\nKoh, Allison. Dealing with Diaspora Dissent in Different Domains: A Conceptual Framework of Authoritarian Regimes‚Äô Foreign Social Media Strategies.\nKoh, Allison. Did Twitter‚Äôs Removal of Government and State-Affiliated Media Labels Expand the Influence of State Actors?. (PAP)\n\n\nOutreach Publications\nRitholtz, Samuel, Allison Koh, and Anita R. Gohdes. ‚ÄúFanning the Flames of Hate: The Transnational Diffusion of Online Anti-LGBT+ Rhetoric and Offline Mobilisation‚Äù. The Global Network on Extremism and Technology (GNET) - Gender and Online Extremism Series, 29 Nov 2022."
  },
  {
    "objectID": "violin.html",
    "href": "violin.html",
    "title": "Violin üéª",
    "section": "",
    "text": "In a past life, I was a pretty good violinist. I have been playing since I was 2 years old. Some of my career highlights include being a member of New York Youth Symphony (Seasons 48 and 49), serving as concertmaster in several orchestras, winning a concerto competition, managing my own chamber music ensembles, and being a wedding musician. Here are a couple moments from around the peak of my career üòä\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "resources_python.html",
    "href": "resources_python.html",
    "title": "Python",
    "section": "",
    "text": "conda create --name ENVNAME python=3.9.7\nconda activate ENVNAME\nconda deactivate ENVNAME\nEvery time you make a new environment, don‚Äôt forget to install git! For my CLI (Anaconda Powershell Prompt for Windows 11):\nconda install git"
  },
  {
    "objectID": "resources_python.html#setting-up-virtual-environments-in-the-cli",
    "href": "resources_python.html#setting-up-virtual-environments-in-the-cli",
    "title": "Python",
    "section": "",
    "text": "conda create --name ENVNAME python=3.9.7\nconda activate ENVNAME\nconda deactivate ENVNAME\nEvery time you make a new environment, don‚Äôt forget to install git! For my CLI (Anaconda Powershell Prompt for Windows 11):\nconda install git"
  },
  {
    "objectID": "resources_python.html#pandas",
    "href": "resources_python.html#pandas",
    "title": "Python",
    "section": "pandas",
    "text": "pandas\nSet default format for displaying numbers; rounding to the nearest number\npd.options.display.float_format = '{:.0f}'.format"
  },
  {
    "objectID": "resources_python.html#ide-stuff",
    "href": "resources_python.html#ide-stuff",
    "title": "Python",
    "section": "IDE stuff",
    "text": "IDE stuff\n\nJupyter notebooks with VSCode are normally my go-to, especially if collaborators are comfortable working with Github.\nIf browser-based IDEs aren‚Äôt your favorite, Jupyter Ascending seems like a good option for using a text editor of your choice to generate Jupyter notebooks. (note: I haven‚Äôt checked this in a while)\nColab is another common tool used; it‚Äôs not my preference given the workflow for file management, etc. is very different."
  },
  {
    "objectID": "resources_python.html#pytorch-for-text-classification",
    "href": "resources_python.html#pytorch-for-text-classification",
    "title": "Python",
    "section": "PyTorch for Text Classification",
    "text": "PyTorch for Text Classification\nUseful resource comparing old torchtext (legacy) to new torchtext: https://lightrun.com/answers/pytorch-text-overview-of-issues-in-torchtext-and-the-plan-for-revamping"
  },
  {
    "objectID": "resources_python.html#file-management-with-pathlib",
    "href": "resources_python.html#file-management-with-pathlib",
    "title": "Python",
    "section": "File management with pathlib",
    "text": "File management with pathlib\nUse pathlib for relative paths in Python. Docs: https://docs.python.org/3/library/pathlib.html\nStuff to import at the top of the script/NB\nimport pathlib \nfrom pathlib import Path\nThe following lines of code identify a working directory and prints directory name/parent directory.\npath = Path.cwd()\nprint(path)\nprint(path.parent)\nJoining paths: In my workflow, I normally keep the working directory as my code folder and specify the path for storing data collected using relative paths. The following code specifies a path and specifies the file path for the data subdirectory of a project.\ncode_path = Path.cwd()\ndata_path = Path(path.parent, 'data')"
  },
  {
    "objectID": "resources_r.html",
    "href": "resources_r.html",
    "title": "R",
    "section": "",
    "text": "Preventing scientific notation: https://stackoverflow.com/questions/25946047/how-to-prevent-scientific-notation-in-r"
  },
  {
    "objectID": "resources_r.html#base",
    "href": "resources_r.html#base",
    "title": "R",
    "section": "",
    "text": "Preventing scientific notation: https://stackoverflow.com/questions/25946047/how-to-prevent-scientific-notation-in-r"
  },
  {
    "objectID": "resources_r.html#package-management",
    "href": "resources_r.html#package-management",
    "title": "R",
    "section": "package management",
    "text": "package management\nMy current preferred package management workflow involves creating virtual environments with renv.\nMy (previously) preferred package for package management is pacman. Before loading in dependencies, put this at the top of the script\nif(!require(\"pacman\")) install.packages(\"pacman\")"
  },
  {
    "objectID": "resources_r.html#filepath-management",
    "href": "resources_r.html#filepath-management",
    "title": "R",
    "section": "file/path management",
    "text": "file/path management\nI use the here() package for file/path management.\nTo reset home path (tidyverse equivalent of setwd()): set_here(). It‚Äôs a superseded function, but I don‚Äôt really like the replacement"
  },
  {
    "objectID": "resources_r.html#dplyr",
    "href": "resources_r.html#dplyr",
    "title": "R",
    "section": "dplyr",
    "text": "dplyr\nCombine with purrr::map to read in multiple csvs to one data frame https://www.mjandrews.org/blog/readmultifile/\nUseful functions that I am constantly forgetting: na_if and rowwise() (group_by for rows)\nNOTE: Don‚Äôt get stuck in the trap of doing row-wise operations if pivoting makes more sense!\nslice(1L) for getting the max value of each group\ngrouped_data &lt;- data %&gt;%\n  group_by(variable, group_vars) %&gt;%\n  summarize(values = sum(values)) %&gt;%\n  mutate(grp = cur_group_id()) %&gt;%\n  arrange(-n) %&gt;%\n  slice(1L)\nrecode() values in variables\nreplace_na() for recoding NA values in variables\nDo you want counts of variables in groups without deleting all the other variables? Use mutate() after group_by() instead of summarize. Then subset accordingly. e.g.:\ndf %&gt;%\n  group_by(country_person) %&gt;%\n  mutate(\n    n_articles_total = n(),\n    n_articles_before = sum(before_appoint==1),\n    n_articles_after = n_articles_total - n_articles_before,\n    n_lang_en = sum(lang_en==1),\n    n_lang_other = n_articles_total - n_lang_en,\n    av_text_length = mean(length)\n  )\n\ndf_tidy_subset &lt;- df %&gt;%\n  select(\n    id, country_person, n_articles_total, n_articles_before,\n    n_articles_after, n_lang_en, n_lang_other, av_text_length\n  ) %&gt;%\n  unique() # rm duplicates\nid numbers within groups\ndf %&gt;% group_by(cat) %&gt;% mutate(id = row_number())"
  },
  {
    "objectID": "resources_r.html#stringcharacter-vector-manipulation",
    "href": "resources_r.html#stringcharacter-vector-manipulation",
    "title": "R",
    "section": "String/character vector manipulation",
    "text": "String/character vector manipulation\nRemove all characters that are non-numeric: STRING &lt;- str_remove_all(STRING, \"\\\\D+\")\nExtract substring between two strings: qdapRegex::ex_between()"
  },
  {
    "objectID": "resources_r.html#purrr",
    "href": "resources_r.html#purrr",
    "title": "R",
    "section": "purrr",
    "text": "purrr\n\nmap\nOn reading in multiple files and combining result of a function into a data frame: https://clauswilke.com/blog/2016/06/13/reading-and-combining-many-tidy-data-files-in-r/"
  },
  {
    "objectID": "resources_r.html#lubridate-working-with-dates-in-general",
    "href": "resources_r.html#lubridate-working-with-dates-in-general",
    "title": "R",
    "section": "lubridate (/working with dates in general)",
    "text": "lubridate (/working with dates in general)\nCreate date object from year and month columns with ym() function (goes for a bunch of different ymd combinations as well). e.g.:\ndf %&gt;%\n  mutate(\n    date = ym(paste(Year, Month))\n  )"
  },
  {
    "objectID": "resources_r.html#manipulating-twitter-data",
    "href": "resources_r.html#manipulating-twitter-data",
    "title": "R",
    "section": "Manipulating Twitter Data",
    "text": "Manipulating Twitter Data\n(NOTE: as of July 2023, there is extremely limited researcher access to Twitter data)\nI used to collect my data using the twarc Python package, but work with my data in R. See code below as an example for wrangling the JSON strings from entities variables.\nYou might have to make things more complex if you want to also add where tweets came from, but hopefully the snippet below provides a good starting point!\ntweets_entities &lt;- tweets %&gt;% \n  filter(entities.annotations != \"\") %&gt;% # for some reason drop_na not working\n  mutate(entities.annotations = gsub(\"\\\"\\\"\", \"\\\"\", entities.annotations)) \n\nentities &lt;- map(tweets_entities$entities.annotations, fromJSON) %&gt;% \n  bind_rows() %&gt;% \n  select(\"type\", \"normalized_text\") %&gt;% \n  distinct()\n\npeople &lt;- entities %&gt;% \n  filter(type == \"Person\")"
  },
  {
    "objectID": "resources_r.html#ggplot2",
    "href": "resources_r.html#ggplot2",
    "title": "R",
    "section": "ggplot2",
    "text": "ggplot2\nIf you‚Äôre a Python user, stick to the Grammar of Graphics and use the plotnine library for visualization :D\n\nHeatmap snippet\nfig_df |&gt; \n  ggplot(aes(x = country, y = account_type, fill = n)) + \n  geom_tile(color = \"white\") +\n  geom_text(aes(label = n), color = \"white\", size = 15) + \n  coord_fixed() + \n  scale_fill_viridis(end = 0.7)\n\n\nFaceting\nDifferent categorical x-axes https://stackoverflow.com/questions/45019839/ggplot2-different-facet-width-for-categorical-x-axis\n\n\nThemes\nThis is the theme_set() that I might use for now.\n# add fonts (this might not be a necessary step)\nshowtext::font_add_google(name = \"Fira Sans\", family = \"fira\")\nshowtext::font_add_google(name = \"Roboto\", family = \"roboto\")\n\n# themes and text defaults\ntheme_set(\n  theme_minimal() +\n    theme(\n      legend.position = \"bottom\",\n      plot.title = element_text(family = \"fira\"),\n      text = element_text(family = \"roboto\")\n    )\n)\n\n\nLabels\nUse str_wrap() around different graphic elements to automatically wrap captions/text/legend labels. Sample code below:\ntop_df %&gt;%\n  ggplot(aes(x = date, y = as.numeric(rank), color = str_wrap(game, 20))) +\n  geom_point() +\n  geom_bump() +\n  scale_y_reverse(limits = c(10, 1), n.breaks = 10) +\n  labs(\n    title = \"Top Games Streamed on Twitch\",\n    subtitle = str_wrap(\"Games shown are a subset of data with the top 200 ranked games over time. Each of these games have consistently ranked in the top 200, but not necessarily top 10 throughout the years.\")\n  ) +\n  guides(col = guide_legend(ncol = 3))\nIf you want to wrap legend labels but keep factor levels, use the following helper function (thanks Hadley Wickham!)\n# for wrapping legend labels while keeping original factor levels\n# https://github.com/tidyverse/stringr/issues/107\nstr_wrap_factor &lt;- function(x, ...) {\n  levels(x) &lt;- str_wrap(levels(x), ...)\n  x\n}\nHow to customize which legends are shown based on aesthetic: guides(). Example:\ndata %&gt;%\n  ggplot(aes(x = type, y = fct_rev(abb), size = n, color = n)) +\n  geom_point() +\n  labs(\n    title = \"TITLE\",\n    x = \"\",\n    y = \"\",\n    color = \"\",\n    caption = \"Data Source: DATA_SOURCE\\nVisualization: Allison Koh\"\n    ) +\n    guides(size = \"none\")\n\n\nFonts\n{extrafont} and {showtext} are useful for adding different fonts to viz.¬†The former is for loading in existing fonts from system, the latter is for making sure your text shows up in all graphics(and for loading in fonts from google and other places).\nLIFE HACK (or more likely, common sense thing that I often forget): Make sure to include font families in theme_set() at the top of a script instead of in individual graphics.\nUseful lines of code for {extrafont} are as follows:\n# load in system fonts\nextrafont::load_fonts()\n\n# show font names\nfonts()\n\n# show a data frame of all fonts available\nfonttable()\nUseful lines of code for {showtext} are as follows:\nshowtext_auto() # put at the beginning of a script to automatically show text in new graphics devices\n\n\ngeom_bernie()\nAdd Bernie Sanders to your plots :D because why not\nInstall\nremotes::install_github(\"R-CoderDotCom/ggbernie@main\")\nGeom\ngeom_bernie(aes(x = 1930, y = 20100), bernie = \"sitting\")\n\n\nAlt Text\nHelper Function\n# helper function for writing alt text\n# https://twitter.com/thomas_mock/status/1375853258145734660\nwrite_alt_text &lt;- function(\n  chart_type,\n  type_of_data,\n  reason,\n  misc,\n  source\n){\n  glue::glue(\n    \"{chart_type} of {type_of_data} where {reason}. \\n\\n{misc}\\n\\nData source from {source}\"\n  )\n}\nExamples\nThe {TidyTuesdayAltText} package contains examples of AltText from #TidyTuesday posts between 2019 and 2021.\nA future version of this package will include an annotated dataset of alt text + ratings according to feature: https://twitter.com/spcanelon/status/1405488036989870080. Until it is integrated into the package, the data can be found here: https://github.com/spcanelon/csvConf2021/blob/main/data/annotatedRubric1.csv\ndevtools::install_github(\"spcanelon/TidyTuesdayAltText\n\n\nPalette from picture with {paletteR}\nhttps://datascienceplus.com/how-to-use-paletter-to-automagically-build-palettes-from-pictures/\ndevtools::install_github(\"andreacirilloac/paletter\")\ncreate_palette(image_path = \"~/Desktop/410px-Piero_della_Francesca_046.jpg\",\n               number_of_colors =20,\n               type_of_variable = ‚Äúcategorical\")\n\n\nTest palette with pie() function\npie(rep(1, 13), col=pal)"
  },
  {
    "objectID": "resources_r.html#combining-pdfs",
    "href": "resources_r.html#combining-pdfs",
    "title": "R",
    "section": "Combining PDFs",
    "text": "Combining PDFs\nhttps://stackoverflow.com/questions/17552917/merging-existing-pdf-files-using-r\ninstall.packages(\"qpdf\")\nqpdf::pdf_combine(input = c(\"file.pdf\", \"file2.pdf\", \"file3.pdf\"),\n                  output = \"output.pdf\")"
  },
  {
    "objectID": "resources_r.html#rselenium",
    "href": "resources_r.html#rselenium",
    "title": "R",
    "section": "RSelenium",
    "text": "RSelenium\nReset port (for error message: Selenium server signals port = 4444 is already in use.) https://stackoverflow.com/questions/74708282/rselenium-is-not-working-when-creating-servers\nlibrary(qdapRegex)\n\n#clear busy port in windows\nport &lt;- 4444L\ntintern &lt;- system(\"netstat -a -n -o\",intern=T)\nirow1 &lt;- grep(as.character(port),tintern)\nif(length(irow1)&gt;0){\n  irow1 &lt;- irow1[1]\n  if(!is.na(irow1)){\n    irow1 &lt;- irow1[1]\n    trow &lt;- tintern[irow1]\n    trow &lt;- trimws(rm_white(trow))\n    tpid &lt;- word(trow,-1,-1) \n    system(paste0(\"taskkill /pid \",tpid,\" /F\"))\n    \n  }\n}"
  },
  {
    "objectID": "now.html",
    "href": "now.html",
    "title": "Now1",
    "section": "",
    "text": "As of March 27, 2025, this is what I‚Äôm up to:"
  },
  {
    "objectID": "now.html#footnotes",
    "href": "now.html#footnotes",
    "title": "Now1",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://nownownow.com/about‚Ü©Ô∏é"
  },
  {
    "objectID": "bio.html",
    "href": "bio.html",
    "title": "Bio",
    "section": "",
    "text": "Allison Koh is a Research Fellow in Natural Language Processing at the University of Birmingham‚Äôs Centre for Artificial Intelligence in Government. Her research seeks to understand the geopolitics of emerging technologies and advance applications of generative AI in conflict research. Her most recent work outlines the strategic landscape of digital transnational repression on social media and identifies how vulnerabilities in social media companies‚Äô transparency and content moderation policies can benefit the foreign policy interests of authoritarian regimes. Koh holds a PhD in Political Science and an MPP in Policy Analysis from the Hertie School in Berlin, and completed her BSc in Economics and Asian Studies at Tulane University.\nClick here for a high-quality headshot.\n\n\n\n\n Back to top"
  }
]